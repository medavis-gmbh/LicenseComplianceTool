# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Cache Maven repository
      uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-      
    
    - name: Set up JDK 11
      uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Extract releasing version from POM
      id: extract_version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        # Remove -SNAPSHOT from version
        VERSION=${VERSION%-SNAPSHOT}
        echo "VERSION=$VERSION" >> $GITHUB_ENV        

    - name: Set up Git user
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'        
        
    - name: Set release version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mvn -B versions:set -DnewVersion=${{ env.VERSION }}
        git commit -am "Release version set"
        git push origin main             

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Create and push tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git tag v${{ env.VERSION }}
        git push origin v${{ env.VERSION }}

    - name: Increase version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mvn -B release:update-versions
        git commit -am "Next development version set"
        git push origin main                

    - name: Upload assets
      uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2
      with:
        name: v${{ env.VERSION }}
        tag_name: v${{ env.VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: true
        prerelease: false
        files: |
          cli/target/license-compliance-tool-cli.jar
          jenkins/target/license-compliance-tool-jenkins.hpi          

      
      
