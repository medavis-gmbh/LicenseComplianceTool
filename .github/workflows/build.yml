# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build project with Maven

on:
  push:
    branches:
      - '**'
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@6871f53176ad61624f978536bbf089c574dc19a2 # v8

      - name: Checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Cache Maven repository
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Extract version from POM
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Upload assets from main branch
        if: steps.branch-names.outputs.current_branch == 'main'
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2
        with:
          name: v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          prerelease: false
          files: |
            cli/target/license-compliance-tool-cli.jar
            jenkins/target/license-compliance-tool-jenkins.hpi          
